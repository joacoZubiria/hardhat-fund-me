{
  "address": "0x387d3Df5036e46A5614DbD89a927647C0B04CaF7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x90efe3bc98f2065f192a55594a94e41231c89c91ef637ae14b71302be811faea",
  "receipt": {
    "to": null,
    "from": "0xbD3Bf5aE6bB45980f3534dd27963A33c0a895c06",
    "contractAddress": "0x387d3Df5036e46A5614DbD89a927647C0B04CaF7",
    "transactionIndex": 20,
    "gasUsed": "1108287",
    "logsBloom": "0x
    "blockHash": "0x39a8f364e6fad028761331bb589f1079d16af4be316debeb4443848352599a1d",
    "transactionHash": "0x90efe3bc98f2065f192a55594a94e41231c89c91ef637ae14b71302be811faea",
    "logs": [],
    "blockNumber": 11096627,
    "cumulativeGasUsed": "10704718",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "baa171e0b95e71abf9800429ed24b3a8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    AggregatorV3Interface public s_priceFeed;\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    \\n    function cheaperWithdraw() payable onlyOwner public{\\n        address[] memory funders = s_funders;\\n        for(uint256 fundersIndex=0; fundersIndex < funders.length; fundersIndex++){\\n            address funder = funders[fundersIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256){\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n        return s_priceFeed;\\n    }\\n\\n    function getFunder(uint i) public view returns(address){\\n        return s_funders[i];\\n    }\\n}\\n\\n//Functions order:\\n//constructor\\n//receive\\n//fallback\\n//external\\n//public\\n//internal\\n//private\\n//view, pure\\n\\n// Explainer from: https://solidity-by-example.org/fallback/\\n// Ether is sent to contract\\n//      is msg.data empty?\\n//          /   \\\\ \\n//         yes  no\\n//         /     \\\\\\n//    receive()?  fallback() \\n//     /   \\\\ \\n//   yes   no\\n//  /        \\\\\\n//receive()  fallback()\",\"keccak256\":\"0x617fa7ce2c96a48ca177eda51bc02f646c4f6ce52055299cf5e732dc8a8a77df\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData(); //desestructurar\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xbea541191c9e223d548e578223ab4b41250dda24c4b991bd83982f5e36d8bc79\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620014283803806200142883398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b6080516112af6200017960003960008181610439015281816106c7015261071701526112af6000f3fe6080604052600436106100a05760003560e01c80636b69a592116100645780636b69a592146101a5578063893d20e8146101d05780639e87a5cd146101fb578063b60d428814610226578063be2693f014610230578063d7b4750c1461023a576100af565b80630343fb25146100b95780630ec3b027146100f65780631bf6132d146101215780633ccfd60b1461015e57806354861af714610168576100af565b366100af576100ad610277565b005b6100b7610277565b005b3480156100c557600080fd5b506100e060048036038101906100db9190610be7565b6103b1565b6040516100ed9190610c2d565b60405180910390f35b34801561010257600080fd5b5061010b6103f9565b6040516101189190610ca7565b60405180910390f35b34801561012d57600080fd5b5061014860048036038101906101439190610be7565b61041f565b6040516101559190610c2d565b60405180910390f35b610166610437565b005b34801561017457600080fd5b5061018f600480360381019061018a9190610cee565b610677565b60405161019c9190610d2a565b60405180910390f35b3480156101b157600080fd5b506101ba6106b6565b6040516101c79190610c2d565b60405180910390f35b3480156101dc57600080fd5b506101e56106c3565b6040516101f29190610d2a565b60405180910390f35b34801561020757600080fd5b506102106106eb565b60405161021d9190610ca7565b60405180910390f35b61022e610277565b005b610238610715565b005b34801561024657600080fd5b50610261600480360381019061025c9190610cee565b6109b9565b60405161026e9190610d2a565b60405180910390f35b6802b5e3af16b18800006102b6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610a0190919063ffffffff16565b10156102f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ee90610da2565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103459190610df1565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104bc576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610567576000600182815481106104e2576104e1610e47565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061055f90610e76565b9150506104bf565b50600067ffffffffffffffff81111561058357610582610ebf565b5b6040519080825280602002602001820160405280156105b15781602001602082028036833780820191505090505b50600190805190602001906105c7929190610add565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105ee90610f1f565b60006040518083038185875af1925050503d806000811461062b576040519150601f19603f3d011682016040523d82523d6000602084013e610630565b606091505b5050905080610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90610f80565b60405180910390fd5b50565b6001818154811061068757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461079a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561081e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107d4575b5050505050905060005b81518110156108a857600082828151811061084657610845610e47565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806108a090610e76565b915050610828565b50600067ffffffffffffffff8111156108c4576108c3610ebf565b5b6040519080825280602002602001820160405280156108f25781602001602082028036833780820191505090505b5060019080519060200190610908929190610add565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161092f90610f1f565b60006040518083038185875af1925050503d806000811461096c576040519150601f19603f3d011682016040523d82523d6000602084013e610971565b606091505b50509050806109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac90610f80565b60405180910390fd5b5050565b6000600182815481106109cf576109ce610e47565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610a0d83610a3d565b90506000670de0b6b3a76400008583610a269190610fa0565b610a309190611029565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a8657600080fd5b505afa158015610a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abe91906110e7565b5050509150506402540be40081610ad59190611162565b915050919050565b828054828255906000526020600020908101928215610b56579160200282015b82811115610b555782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610afd565b5b509050610b639190610b67565b5090565b5b80821115610b80576000816000905550600101610b68565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bb482610b89565b9050919050565b610bc481610ba9565b8114610bcf57600080fd5b50565b600081359050610be181610bbb565b92915050565b600060208284031215610bfd57610bfc610b84565b5b6000610c0b84828501610bd2565b91505092915050565b6000819050919050565b610c2781610c14565b82525050565b6000602082019050610c426000830184610c1e565b92915050565b6000819050919050565b6000610c6d610c68610c6384610b89565b610c48565b610b89565b9050919050565b6000610c7f82610c52565b9050919050565b6000610c9182610c74565b9050919050565b610ca181610c86565b82525050565b6000602082019050610cbc6000830184610c98565b92915050565b610ccb81610c14565b8114610cd657600080fd5b50565b600081359050610ce881610cc2565b92915050565b600060208284031215610d0457610d03610b84565b5b6000610d1284828501610cd9565b91505092915050565b610d2481610ba9565b82525050565b6000602082019050610d3f6000830184610d1b565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d8c601b83610d45565b9150610d9782610d56565b602082019050919050565b60006020820190508181036000830152610dbb81610d7f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dfc82610c14565b9150610e0783610c14565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3c57610e3b610dc2565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e8182610c14565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610eb457610eb3610dc2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610f09600083610eee565b9150610f1482610ef9565b600082019050919050565b6000610f2a82610efc565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f6a600b83610d45565b9150610f7582610f34565b602082019050919050565b60006020820190508181036000830152610f9981610f5d565b9050919050565b6000610fab82610c14565b9150610fb683610c14565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fef57610fee610dc2565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061103482610c14565b915061103f83610c14565b92508261104f5761104e610ffa565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6110798161105a565b811461108457600080fd5b50565b60008151905061109681611070565b92915050565b6000819050919050565b6110af8161109c565b81146110ba57600080fd5b50565b6000815190506110cc816110a6565b92915050565b6000815190506110e181610cc2565b92915050565b600080600080600060a0868803121561110357611102610b84565b5b600061111188828901611087565b9550506020611122888289016110bd565b9450506040611133888289016110d2565b9350506060611144888289016110d2565b925050608061115588828901611087565b9150509295509295909350565b600061116d8261109c565b91506111788361109c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156111b7576111b6610dc2565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111f4576111f3610dc2565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561123157611230610dc2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561126e5761126d610dc2565b5b82820290509291505056fea26469706673582212209bf845d2b98cb93d03ce1d691bdbe60de4b333e2510baade70d67ec8180a4af964736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c80636b69a592116100645780636b69a592146101a5578063893d20e8146101d05780639e87a5cd146101fb578063b60d428814610226578063be2693f014610230578063d7b4750c1461023a576100af565b80630343fb25146100b95780630ec3b027146100f65780631bf6132d146101215780633ccfd60b1461015e57806354861af714610168576100af565b366100af576100ad610277565b005b6100b7610277565b005b3480156100c557600080fd5b506100e060048036038101906100db9190610be7565b6103b1565b6040516100ed9190610c2d565b60405180910390f35b34801561010257600080fd5b5061010b6103f9565b6040516101189190610ca7565b60405180910390f35b34801561012d57600080fd5b5061014860048036038101906101439190610be7565b61041f565b6040516101559190610c2d565b60405180910390f35b610166610437565b005b34801561017457600080fd5b5061018f600480360381019061018a9190610cee565b610677565b60405161019c9190610d2a565b60405180910390f35b3480156101b157600080fd5b506101ba6106b6565b6040516101c79190610c2d565b60405180910390f35b3480156101dc57600080fd5b506101e56106c3565b6040516101f29190610d2a565b60405180910390f35b34801561020757600080fd5b506102106106eb565b60405161021d9190610ca7565b60405180910390f35b61022e610277565b005b610238610715565b005b34801561024657600080fd5b50610261600480360381019061025c9190610cee565b6109b9565b60405161026e9190610d2a565b60405180910390f35b6802b5e3af16b18800006102b6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610a0190919063ffffffff16565b10156102f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ee90610da2565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103459190610df1565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104bc576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610567576000600182815481106104e2576104e1610e47565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061055f90610e76565b9150506104bf565b50600067ffffffffffffffff81111561058357610582610ebf565b5b6040519080825280602002602001820160405280156105b15781602001602082028036833780820191505090505b50600190805190602001906105c7929190610add565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105ee90610f1f565b60006040518083038185875af1925050503d806000811461062b576040519150601f19603f3d011682016040523d82523d6000602084013e610630565b606091505b5050905080610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90610f80565b60405180910390fd5b50565b6001818154811061068757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461079a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561081e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107d4575b5050505050905060005b81518110156108a857600082828151811061084657610845610e47565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806108a090610e76565b915050610828565b50600067ffffffffffffffff8111156108c4576108c3610ebf565b5b6040519080825280602002602001820160405280156108f25781602001602082028036833780820191505090505b5060019080519060200190610908929190610add565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161092f90610f1f565b60006040518083038185875af1925050503d806000811461096c576040519150601f19603f3d011682016040523d82523d6000602084013e610971565b606091505b50509050806109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac90610f80565b60405180910390fd5b5050565b6000600182815481106109cf576109ce610e47565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610a0d83610a3d565b90506000670de0b6b3a76400008583610a269190610fa0565b610a309190611029565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a8657600080fd5b505afa158015610a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abe91906110e7565b5050509150506402540be40081610ad59190611162565b915050919050565b828054828255906000526020600020908101928215610b56579160200282015b82811115610b555782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610afd565b5b509050610b639190610b67565b5090565b5b80821115610b80576000816000905550600101610b68565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bb482610b89565b9050919050565b610bc481610ba9565b8114610bcf57600080fd5b50565b600081359050610be181610bbb565b92915050565b600060208284031215610bfd57610bfc610b84565b5b6000610c0b84828501610bd2565b91505092915050565b6000819050919050565b610c2781610c14565b82525050565b6000602082019050610c426000830184610c1e565b92915050565b6000819050919050565b6000610c6d610c68610c6384610b89565b610c48565b610b89565b9050919050565b6000610c7f82610c52565b9050919050565b6000610c9182610c74565b9050919050565b610ca181610c86565b82525050565b6000602082019050610cbc6000830184610c98565b92915050565b610ccb81610c14565b8114610cd657600080fd5b50565b600081359050610ce881610cc2565b92915050565b600060208284031215610d0457610d03610b84565b5b6000610d1284828501610cd9565b91505092915050565b610d2481610ba9565b82525050565b6000602082019050610d3f6000830184610d1b565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d8c601b83610d45565b9150610d9782610d56565b602082019050919050565b60006020820190508181036000830152610dbb81610d7f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dfc82610c14565b9150610e0783610c14565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3c57610e3b610dc2565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e8182610c14565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610eb457610eb3610dc2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610f09600083610eee565b9150610f1482610ef9565b600082019050919050565b6000610f2a82610efc565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f6a600b83610d45565b9150610f7582610f34565b602082019050919050565b60006020820190508181036000830152610f9981610f5d565b9050919050565b6000610fab82610c14565b9150610fb683610c14565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fef57610fee610dc2565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061103482610c14565b915061103f83610c14565b92508261104f5761104e610ffa565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6110798161105a565b811461108457600080fd5b50565b60008151905061109681611070565b92915050565b6000819050919050565b6110af8161109c565b81146110ba57600080fd5b50565b6000815190506110cc816110a6565b92915050565b6000815190506110e181610cc2565b92915050565b600080600080600060a0868803121561110357611102610b84565b5b600061111188828901611087565b9550506020611122888289016110bd565b9450506040611133888289016110d2565b9350506060611144888289016110d2565b925050608061115588828901611087565b9150509295509295909350565b600061116d8261109c565b91506111788361109c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156111b7576111b6610dc2565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111f4576111f3610dc2565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561123157611230610dc2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561126e5761126d610dc2565b5b82820290509291505056fea26469706673582212209bf845d2b98cb93d03ce1d691bdbe60de4b333e2510baade70d67ec8180a4af964736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}